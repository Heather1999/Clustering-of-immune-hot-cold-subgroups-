colData <- colData[, c("Sample.ID", "Sample.Type")]
View(colData)
#Create a DESeqDataSet object using the metrix data:
dds <- DESeqDataSetFromMatrix(countData = countData, colData = json_file, design = ~ Sample.Type)
colData$Sample.ID <- gsub("-", ".", colData$Sample.ID)
dds <- DESeqDataSetFromMatrix(countData = countData, colData = json_file, design = ~ Sample.Type)
rownames(countData) <- countData$gene_id
rownames(colData) <- colData$Sample.ID
colData <- read.delim("C:/Users/Heather P/Downloads/gdc_sample_sheet.2021-05-30.tsv", header = TRUE, sep = "\t")
colData$Sample.ID <- gsub("-", ".", colData$Sample.ID)
rownames(colData) <- colData$Sample.ID
colData <- colData[, c("Sample.Type")]
colData <- colData[, -which(names(colData) == "Sample.ID")]
colData <- read.delim("C:/Users/Heather P/Downloads/gdc_sample_sheet.2021-05-30.tsv", header = TRUE, sep = "\t")
colData$Sample.ID <- gsub("-", ".", colData$Sample.ID)
rownames(colData) <- colData$Sample.ID
colData <- colData[, c("Sample.Type")]
colData <- read.delim("C:/Users/Heather P/Downloads/gdc_sample_sheet.2021-05-30.tsv", header = TRUE, sep = "\t")
colData$Sample.ID <- gsub("-", ".", colData$Sample.ID)
rownames(colData) <- colData$Sample.ID
colData <- colData[, c("Sample.Type")]
colData <- read.delim("C:/Users/Heather P/Downloads/gdc_sample_sheet.2021-05-30.tsv", header = TRUE, sep = "\t")
colData$Sample.ID <- gsub("-", ".", colData$Sample.ID)
rownames(colData) <- colData$Sample.ID
View(colData)
countData <- read.csv("C:/Users/Heather P/Desktop/github/T1/all_unstranded.csv")
countData <- as.data.frame(countData)
rownames(countData) <- countData$gene_id
countData <- countData[, -which(names(countData) == "gene_id")]
View(countData)
#Create a DESeqDataSet object using the metrix data:
dds <- DESeqDataSetFromMatrix(countData = countData, colData = json_file, design = ~ Sample.Type)
View(colData)
View(colData)
row_names_to_keep <- rownames(colData)[rownames(colData) %in% colnames(countData)]
df1_filtered <- colData[colData$Name %in% row_names_to_keep, ]
View(df1_filtered)
df1_filtered <- colData[rownames(colData) %in% row_names_to_keep, ]
colData <- colData[rownames(colData) %in% row_names_to_keep, ]
#Create a DESeqDataSet object using the metrix data:
dds <- DESeqDataSetFromMatrix(countData = countData, colData = json_file, design = ~ Sample.Type)
#Create a DESeqDataSet object using the metrix data:
dds <- DESeqDataSetFromMatrix(countData = countData, colData = json_file, design = ~ Sample.Type)
View(countData)
desired_order <- rownames(colData)
countData <- countData[, desired_order]
#Create a DESeqDataSet object using the metrix data:
dds <- DESeqDataSetFromMatrix(countData = countData, colData = json_file, design = ~ Sample.Type)
dds <- DESeqDataSetFromMatrix(counts= countData, colData = json_file, design = ~ Sample.Type)
print(str(colData))
print(str(countData))
print(str(colData))
#Create a DESeqDataSet object using the metrix data:
dds <- DESeqDataSetFromMatrix(countData= countData, colData = colData, design = ~ Sample.Type)
#Perform differential expression analysis using DESeq2
dds <- DESeq(dds)
#Extract the results of the differential expression analysis
resu <- results(dds)
# Summary of differential gene expression
summary(resu)
head(results(dds, tidy = TRUE))
head(resu)
summary(resu)
head(results(dds, tidy = TRUE))
head(resu)
#rearrange p value order
resu <- resu[order(resu$pvalue), ]
head(resu)
par(mfrow=c(2,3))
plotCounts(dds, gene="ENSG00000105607.13", intgroup="dex")
par(mfrow=c(2,3))
plotCounts(dds, gene="ENSG00000105607.13", intgroup="Sample.Type")
resu <- resu[order(resu$padj), ]
head(resu)
par(mfrow=c(2,3))
plotCounts(dds, gene="ENSG00000105607.13", intgroup="Sample.Type")
# Reset the current graphics parameter settings
par(mfrow=c(1,1))
# Make a basic volcano plot
with(resu, plot(log2FoldChange, -log10(pvalue), pch=20, main="Volcano plot", xlim=c(-3,3), ylim=c(0, 40), col="grey"))
# Add colored points: blue if padj<0.01, red if log2FC>1 and padj<0.05)
with(subset(resu, padj<.01 ),
points(log2FoldChange, -log10(pvalue), pch=20, col="blue"))
with(subset(resu, padj<.01 & abs(log2FoldChange)>2),
points(log2FoldChange, -log10(pvalue), pch=20, col="red"))
DEGs <- row.names(subset(resu, padj<.01 & abs(log2FoldChange)>2))
vsdata <- vst(dds, blind=FALSE)
plotPCA(vsdata, intgroup="Sample.Type")
if (!require("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("clusterProfiler")
library(clusterProfiler)
library(clusterProfiler)
View(dds)
if (!require("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("org.Hs.eg.db")
library("org.Hs.eg.db")
a
library("org.Hs.eg.db")
if (!require("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("topGO")
library(topGO)
library(topGO)
if (!require("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("pathview")
library("pathview")
library("pathview")
DEG_genes_df <- bitr(DEGs, fromType = "ENSEMBL", toType = c("ENTREZID", "SYMBOL"), OrgDb = org.Hs.eg.db)
print(str(DEGs))
DEGs <- sub("\\..*", "", DEGs)
DEG_genes_df <- bitr(DEGs, fromType = "ENSEMBL", toType = c("ENTREZID", "SYMBOL"), OrgDb = org.Hs.eg.db)
View(DEG_genes_df)
ego_MF <- enrichGO(gene = DEG_genes,
OrgDb = org.Hs.eg.db,keyType = "ENSEMBL",
ont = "MF", pAdjustMethod = "BH",pvalueCutoff = 0.05,
qvalueCutoff = 0.05,readable = TRUE)
View(DEG_genes_df)
ego_MF <- enrichGO(gene = DEGs,
OrgDb = org.Hs.eg.db,keyType = "ENSEMBL",
ont = "MF", pAdjustMethod = "BH",pvalueCutoff = 0.05,
qvalueCutoff = 0.05,readable = TRUE)
ego_MF <- enrichGO(gene = DEGs,
OrgDb = org.Hs.eg.db,keyType = "ENSEMBL",
ont = "MF", pAdjustMethod = "BH",pvalueCutoff = 0.05,
qvalueCutoff = 0.05,readable = TRUE)
##可視化—點圖
dotplot(ego_MF, title="EnrichmentGO_MF_dot")
##可視化—點圖
dotplot(ego_MF, font.size = 12, title="EnrichmentGO_MF_dot")
##可視化—點圖
dotplot(ego_MF, font.size = 10, title="EnrichmentGO_MF_dot")
kk <- enrichKEGG(gene = DEGs,organism = 'hsa'pvalueCutoff = 1)
kk <- enrichKEGG(gene = DEGs,organism = 'hsa',pvalueCutoff = 1)
View(DEG_genes_df)
entrez = DEF_genes_df$ENTREZID
entrez = DEG_genes_df$ENTREZID
kk <- enrichKEGG(gene = entrez,organism = 'hsa',pvalueCutoff = 1)
kk <- enrichKEGG(gene = entrez,organism = 'hsa',pvalueCutoff = 1)
View(kk)
dotplot(kk,title="Enrichment KEGG_dot")
View(kk@result)
hsa04080 <- pathview(gene.data = geneList,pathway.id = "hsa04080",
species = "hsa", limit= list(gene=max(abs(geneList)),
cpd=1))
hsa04080 <- pathview(gene.data = entrez,pathway.id = "hsa04080",
species = "hsa", limit= list(gene=max(abs(geneList)),
cpd=1))
# 查看特定pathway圖
hsa04080 <- pathview(gene.data = entrez,pathway.id = "hsa04080",
species = "hsa", limit= list(gene=max(abs(entrez)),
cpd=1))
hsa04080 <- pathview(gene.data = entrez,pathway.id = "hsa04080",
species = "hsa", limit= list(gene=max(abs(entrez)),
cpd=1))
View(df1_filtered)
View(DEG_genes_df)
View(df1_filtered)
View(ego_MF)
View(kk)
View(resu)
View(resu)
rownames(countData) <- sub("\\..*", "", rownames(countData))
new_row_names <- make.unique(sub("\\..*", "", rownames(countData)))
rownames(countData) <- new_row_names
hsa04080 <- pathview(gene.data = countData,pathway.id = "hsa04080", gene.idtype = "ENSEMBL"
species = "hsa", limit= list(gene=max(abs(entrez)), cpd=1))
hsa04080 <- pathview(gene.data = countData,pathway.id = "hsa04080", gene.idtype = "ENSEMBL",
species = "hsa", limit= list(gene=max(abs(entrez)), cpd=1))
hsa04080 <- pathview(gene.data = countData,pathway.id = "hsa04080", gene.idtype = "ENSEMBL",
species = "hsa", limit= list(gene=max(abs(countData)), cpd=1))
View(bods)
hsa04080 <- pathview(gene.data = countData,pathway.id = "hsa04080", gene.idtype = "ENSEMBL",
species = "hsa", limit= list(gene=max(abs(countData)), cpd=1))
install.packages("pathview")
install.packages("pathview")
update.packages()
install.packages("pathview")
update.packages()
install.packages("pathview")
library("pathview")
library("pathview")
hsa04080 <- pathview(gene.data = countData,pathway.id = "hsa04080", gene.idtype = "ENSEMBL",
species = "hsa", limit= list(gene=max(abs(countData)), cpd=1))
hsa04080 <- pathview(gene.data = countData,pathway.id = "hsa04080", gene.idtype = "ENSEMBL",
species = "hsa")
data(gse16873.d)
> pv.out <- pathview(gene.data = gse16873.d[, 1], pathway.id = "04110",
# 查看特定pathway圖
hsa04080 <- pathview(gene.data = countData,pathway.id = "hsa04080", gene.idtype = "ENSEMBL",species = "hsa")
# 查看特定pathway圖
#hsa04080 <- pathview(gene.data = countData,pathway.id = "hsa04080", gene.idtype = "ENSEMBL",species = "hsa")
data(gse16873.d)
View(gse16873.d)
View(dds)
View(DEG_genes_df)
View(df1_filtered)
View(json_data)
View(colData)
pv.out <- pathview(gene.data = gse16873.d[, 1], pathway.id = "04110", + species = "hsa", out.suffix = "gse16873")
pv.out <- pathview(gene.data = gse16873.d[, 1], pathway.id = "04110",
+ species = "hsa", out.suffix = "gse16873")
pv.out <- pathview(gene.data = gse16873.d[, 1], pathway.id = "04110",
species = 'hsa', out.suffix = "gse16873")
hsa04080 <- pathview(gene.data = countData[,1],pathway.id = "04080",
gene.idtype = "ENSEMBL",species = "hsa")
hsa04080 <- pathview(gene.data = countData[,1],pathway.id = "hsa04080",
gene.idtype = "ENSEMBL",species = "hsa")
hsa04080 <- pathview(gene.data = countData,pathway.id = "04080",
gene.idtype = "ENSEMBL",species = "hsa")
help(pathview)
hsa04080 <- pathview(gene.data = countData,pathway.id = "04080",
gene.idtype = "ENSEMBL",species = "hsa"),
hsa04080 <- pathview(gene.data = countData,pathway.id = "04080",
gene.idtype = "ENSEMBL",species = "hsa"),
hsa04080 <- pathview(gene.data = countData,pathway.id = "04080",
gene.idtype = "ENSEMBL",species = "hsa"),
hsa04080 <- pathview(gene.data = countData,pathway.id = "04080",
gene.idtype = "ENSEMBL",species = "hsa"),
hsa04080 <- pathview(gene.data = countData,pathway.id = "04080",
gene.idtype = "ENSEMBL",species = "hsa",
limit = list(gene = 1, cpd = 1)
hsa04080 <- pathview(gene.data = countData,pathway.id = "04080",
hsa04080 <- pathview(gene.data = countData,pathway.id = "04080",
gene.idtype = "ENSEMBL",species = "hsa",limit = list(gene = 1, cpd = 1)
hsa04080 <- pathview(gene.data = countData,pathway.id = "04080",
# 查看特定pathway圖
hsa04080 <- pathview(gene.data = countData,pathway.id = "04080",gene.idtype = "ENSEMBL",species = "hsa",limit=list(gene = 1, cpd = 1)
# 查看特定pathway圖
hsa04080 <- pathview(gene.data = countData,pathway.id = "hsa04080",gene.idtype = "ENSEMBL",species = "hsa",limit=list(gene = 1, cpd = 1)
hsa04080 <- pathview(gene.data = countData,pathway.id = "hsa04080",gene.idtype = "ENSEMBL",species = "hsa",limit=list(gene = 1, cpd = 1)
hsa04080 <- pathview(gene.data = countData,pathway.id = "hsa04080",gene.idtype = "ENSEMBL",species = "hsa",limit=list(gene = 1, cpd = 1)
hsa04080 <- pathview(gene.data = countData,pathway.id = "hsa04080",gene.idtype = "ENSEMBL",species = "hsa",limit=list(gene = 1, cpd = 1)
hsa04080 <- pathview(gene.data = countData,pathway.id = "hsa04080",
hsa04080 <- pathview(gene.data = countData,
pathway.id = "hsa04080",
gene.idtype = "ENSEMBL",
species = "hsa",
limit=list(gene = 1, cpd = 1))
View(vsdata)
View(resu)
View(pv.out)
View(kk)
View(ego_MF)
View(ego_MF)
ego_MF@result[["GeneRatio"]]
hsa04080 <- pathview(gene.data = countData,
pathway.id = "hsa04080",
gene.idtype = "ENSEMBL",
species = "hsa",
limit=list(gene = 1, cpd = 1))
ego_MF@result[["BgRatio"]]
ego_MF@result
hsa04080 <- pathview(gene.data = ego_MF,
pathway.id = "hsa04080",
gene.idtype = "ENSEMBL",
species = "hsa",
limit=list(gene = 1, cpd = 1))
hsa40610 <- pathview(gene.data = ego_MF,
pathway.id = "hsa40610",
gene.idtype = "ENSEMBL",
species = "hsa",
limit=list(gene = 1, cpd = 1))
hsa40610 <- pathview(gene.data = countData,
pathway.id = "hsa40610",
gene.idtype = "ENSEMBL",
species = "hsa",
limit=list(gene = 1, cpd = 1))
View(ego_MF@result)
View(kk)
View(kk@result)
View(DEG_genes_df)
Names(genelist)<-DEG_genes_df[1:4275,2]
Names(countData)<-DEG_genes_df[1:4275,2]
data(geneList, package="DOSE")
hsa04610 <- pathview(gene.data = geneList,
pathway.id = "hsa04610",
gene.idtype = "ENSEMBL",
species = "hsa",
limit=list(gene = 2.5, cpd = 1))
hsa04610 <- pathview(gene.data = geneList,
pathway.id = "hsa04610",
species = "hsa",
limit=list(gene = 2.5, cpd = 1))
hsa04610 <- pathview(gene.data = geneList,
pathway.id = "hsa04610",
species = "hsa",
kegg.negative = T,
limit=list(gene = 2.5, cpd = 1))
deg <- names(geneList)[abs(geneList)>2]
hsa04610 <- pathview(gene.data = geneList,
pathway.id = "hsa04610",
species = "hsa",
kegg.negative = T,
limit=list(gene = 2.5, cpd = 1))
View(vsdata)
View(resu)
resu@elementMetadata
resu
genelist<-as.numeric(resu[1:4275,2])
Names(genelist) <- DEG_genes_df[1:4275,2]
genelist <- as.numeric(resu[1:4275,2])
Names(genelist) <- DEG_genes_df[1:4275,2]
hsa04610 <- pathview(gene.data = genelist,
pathway.id = "hsa04610",
species = "hsa",
limit=list(gene = 2.5, cpd = 1))
> pv.out <- pathview(gene.data = gse16873.d[, 1], pathway.id = "04110",
pv.out <- pathview(gene.data = gse16873.d[, 1], pathway.id = "04110",
+ species = "hsa", out.suffix = "gse16873")
pv.out <- pathview(gene.data = gse16873.d[, 1], pathway.id = "04110",
species = "hsa", out.suffix = "gse16873")
View(gse16873.d)
Names(genelist)<-DEG_genes_df[1:4275,2]
Names(genelist) <- DEG_genes_df[1:4275,2]
names(genelist) <- DEG_genes_df[1:4275,2]
hsa04610 <- pathview(gene.data = genelist,
pathway.id = "hsa04610",
species = "hsa",
limit=list(gene = 1, cpd = 1))
hsa04610 <- pathview(gene.data = genelist,
pathway.id = "hsa04610",
species = "hsa",
limit=list(gene = 1, cpd = 1))
View(pv.out)
View(pv.out[["plot.data.gene"]])
View(pv.out)
View(pv.out[["plot.data.gene"]])
resu
hsa04610 <- pathview(gene.data = genelist,
pathway.id = "hsa04610",
species = "hsa",
same.layer=F
limit=list(gene = 1, cpd = 1))
hsa04610 <- pathview(gene.data = genelist,
pathway.id = "hsa04610",
species = "hsa",
same.layer=F,
limit=list(gene = 1, cpd = 1))
View(hsa04610)
View(hsa04610[["plot.data.gene"]])
View(pv.out[["plot.data.gene"]])
View(resu)
resu
gene = resu$log2FoldChange
rownames(gene)=rownames(resu)
gene = resu
View(gene)
genelist <- as.numeric(resu[1:4275,2])
names(genelist) <- DEG_genes_df[1:4275,2]
hsa04610 <- pathview(gene.data = genelist,
pathway.id = "hsa04610",
species = "hsa",
same.layer=F,
limit=list(gene = 1, cpd = 1))
print(resu[,2])
print(genelist)
hsa04610 <- pathview(gene.data = genelist,
pathway.id = "hsa04610",
species = "hsa",
kegg.native = T,
new.signature = F,
limit=list(gene = 1, cpd = 1))
hsa04610 <- pathview(gene.data = genelist,
pathway.id = "hsa04610",
species = "hsa",
kegg.native = T,
new.signature = F,
limit=list(gene = 1, cpd = 1))
genelist <- as.data.frame(genelist)
View(genelist)
roownames(genelist) <- DEG_genes_df[1:4275,2]
rownames(genelist) <- DEG_genes_df[1:4275,2]
rownames(genelist) <- make.unique(DEG_genes_df[1:4275,2])
View(genelist)
hsa04610 <- pathview(gene.data = genelist,
pathway.id = "hsa04610",
species = "hsa",
kegg.native = T,
new.signature = F,
limit=list(gene = 1, cpd = 1))
View(hsa04610)
View(hsa04610[["plot.data.gene"]])
View(DEG_genes_df)
print(genelist)
rownames(genelist) <- make.unique(DEGs[1:4275])
hsa04610 <- pathview(gene.data = genelist,
pathway.id = "hsa04610",
species = "hsa",
kegg.native = T,
new.signature = F,
limit=list(gene = 1, cpd = 1))
print(genelist)
resu
resu <- sub("\\..*", "", rownames(resu))
rownames(resu) <- sub("\\..*", "", rownames(resu))
library(jsonlite)
library( "DESeq2" )
library(ggplot2)
# Read the sample data into an R object
colData <- read.delim("C:/Users/Heather P/Downloads/gdc_sample_sheet.2021-05-30.tsv", header = TRUE, sep = "\t")
colData$Sample.ID <- gsub("-", ".", colData$Sample.ID)
rownames(colData) <- colData$Sample.ID
countData <- read.csv("C:/Users/Heather P/Desktop/github/T1/all_unstranded.csv")
countData <- as.data.frame(countData)
rownames(countData) <- countData$gene_id
countData <- countData[, -which(names(countData) == "gene_id")]
row_names_to_keep <- rownames(colData)[rownames(colData) %in% colnames(countData)]
colData <- colData[rownames(colData) %in% row_names_to_keep, ]
desired_order <- rownames(colData)
countData <- countData[, desired_order]
print(str(colData))
#Create a DESeqDataSet object using the metrix data:
dds <- DESeqDataSetFromMatrix(countData= countData, colData = colData, design = ~ Sample.Type)
#Perform differential expression analysis using DESeq2
dds <- DESeq(dds)
#Extract the results of the differential expression analysis
resu <- results(dds)
# Summary of differential gene expression
summary(resu)
head(results(dds, tidy = TRUE))
head(resu)
#rearrange p value order
resu <- resu[order(resu$padj), ]
head(resu)
par(mfrow=c(2,3))
plotCounts(dds, gene="ENSG00000105607.13", intgroup="Sample.Type")
# Reset the current graphics parameter settings
par(mfrow=c(1,1))
# Make a basic volcano plot
with(resu, plot(log2FoldChange, -log10(pvalue), pch=20, main="Volcano plot",
xlim=c(-3,3), ylim=c(0, 40), col="grey"))
# Add colored points: blue if padj<0.01, red if log2FC>1 and padj<0.05)
with(subset(resu, padj<.01 ),
points(log2FoldChange, -log10(pvalue), pch=20, col="blue"))
with(subset(resu, padj<.01 & abs(log2FoldChange)>2),
points(log2FoldChange, -log10(pvalue), pch=20, col="red"))
DEGs <- row.names(subset(resu, padj<.01 & abs(log2FoldChange)>2))
#First we need to transform the raw count data
#vst function will perform variance stabilizing transformation
vsdata <- vst(dds, blind=FALSE)
plotPCA(vsdata, intgroup="Sample.Type")
library(clusterProfiler)
library("org.Hs.eg.db")
library(topGO)
library("pathview")
DEGs <- sub("\\..*", "", DEGs)
new_row_names <- make.unique(sub("\\..*", "", rownames(countData)))
rownames(countData) <- new_row_names
# enrichGO 富集分析
ego_MF <- enrichGO(gene = DEGs,
OrgDb = org.Hs.eg.db,keyType = "ENSEMBL",
ont = "MF", pAdjustMethod = "BH",pvalueCutoff = 0.05,
qvalueCutoff = 0.05,readable = TRUE)
##可視化—點圖
dotplot(ego_MF, font.size = 10, title="EnrichmentGO_MF_dot")
entrez = DEG_genes_df$ENTREZID
View(resu)
resu
rownames(genelist) <- rownames(resu[1:4275])
resu
entrez = DEG_genes_df$ENTREZID
DEG_genes_df <- bitr(DEG_genes, fromType = "ENSEMBL", toType = c("ENTREZID", "SYMBOL"), OrgDb = org.Hs.eg.db)
DEG_genes_df <- bitr(DEGs, fromType = "ENSEMBL", toType = c("ENTREZID", "SYMBOL"), OrgDb = org.Hs.eg.db)
entrez = DEG_genes_df$ENTREZID
kk <- enrichKEGG(gene = entrez,organism = 'hsa',pvalueCutoff = 1)
View(kk)
View(kk@result)
genelist <- as.numeric(resu[1:4275,2])
genelist <- as.data.frame(genelist)
rownames(genelist) <- rownames(resu[1:4275])
names(genelist) <- DEG_genes_df[1:4275,2]
genelist <- as.numeric(resu[1:4275,2])
genelist <- as.data.frame(genelist)
rownames(genelist) <- DEG_genes_df[1:4275,2]
rownames(genelist) <- make.unique(DEG_genes_df[1:4275,2])
hsa04610 <- pathview(gene.data = genelist,
pathway.id = "hsa04610",
species = "hsa",
kegg.native = T,
limit=list(gene = 1, cpd = 1))
View(hsa04610)
View(hsa04610)
View(hsa04610[["plot.data.gene"]])
View(dds)
dds
View(vsdata)
vsdata
vsdata@colData
vsdata@assays
vsdata@elementMetadata
vsdata@metadata
vsdata
vsdata@assays
View(genelist)
View(colData)
View(DEG_genes_df)
View(genelist)
View(DEG_genes_df)
if (!require("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("MOMA")
library('MOMA')
library(MOMA)
mapHugo(c("CCL19","CCL21","CXCL13","CCR7","CXCR5","SELL","LAMP3"))
View(gene.map)
library(GEOquery)
setwd("C:/Users/Heather P/Desktop/github/T1")
gse <- getGEO(filename="GSE107943_series_matrix.txt")
View(gse)
